// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	s3 "github.com/aws/aws-sdk-go/service/s3"
	mock "github.com/stretchr/testify/mock"
)

// NewS3Client is an autogenerated mock type for the NewS3Client type
type NewS3Client struct {
	mock.Mock
}

// Put provides a mock function with given fields: body
func (_m *NewS3Client) Put(body *s3.PutObjectInput) (*s3.PutObjectOutput, error) {
	ret := _m.Called(body)

	if len(ret) == 0 {
		panic("no return value specified for Put")
	}

	var r0 *s3.PutObjectOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(*s3.PutObjectInput) (*s3.PutObjectOutput, error)); ok {
		return rf(body)
	}
	if rf, ok := ret.Get(0).(func(*s3.PutObjectInput) *s3.PutObjectOutput); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*s3.PutObjectOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(*s3.PutObjectInput) error); ok {
		r1 = rf(body)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewNewS3Client creates a new instance of NewS3Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNewS3Client(t interface {
	mock.TestingT
	Cleanup(func())
}) *NewS3Client {
	mock := &NewS3Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
