{
  "service": {
    "service": "aws-golang-api",
    "serviceObject": {
      "name": "aws-golang-api"
    },
    "provider": {
      "name": "aws",
      "deploymentMethod": "direct",
      "apiGateway": {
        "binaryMediaTypes": [
          "multipart/form-data"
        ]
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "rekognition:SearchFacesByImage",
                "rekognition:IndexFaces",
                "rekognition:ListFaces",
                "rekognition:CreateCollection",
                "rekognition:DeleteCollection",
                "rekognition:ListCollections",
                "rekognition:DeleteFaces"
              ],
              "Resource": "arn:aws:rekognition:us-east-1:*:collection/aws-golang-api-dev-collection"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": "arn:aws:s3:::aws-golang-api-dev-v3/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
            }
          ]
        }
      },
      "runtime": "provided.al2",
      "architecture": "x86_64",
      "region": "us-east-1",
      "stage": "dev",
      "memorySize": 256,
      "versionFunctions": false,
      "environment": {
        "LOG_LEVEL": "DEBUG",
        "LOCATION_TABLE": "Location",
        "GYROSCOPE_TABLE": "Gyroscope",
        "REKOGNITION_PROJECT": "aws-golang-api-dev",
        "REKOGNITION_COLLECTION": "aws-golang-api-dev-collection",
        "REKOGNITION_REGION": "us-east-1",
        "V3_BUCKET": "aws-golang-api-dev-v3",
        "ENV": "local"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GyroscopeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-golang-api-dev-gyroscope"
            }
          },
          "GpsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-golang-api-dev-gps"
            }
          },
          "PhotoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-golang-api-dev-photo"
            }
          },
          "LlmLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-golang-api-dev-llm"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aws-golang-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-golang-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-golang-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][2]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-golang-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GyroscopeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z/gyroscope.zip"
              },
              "Handler": ".bin/gyroscope",
              "Runtime": "provided.al2",
              "FunctionName": "aws-golang-api-dev-gyroscope",
              "MemorySize": 256,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LOG_LEVEL": "DEBUG",
                  "LOCATION_TABLE": "Location",
                  "GYROSCOPE_TABLE": "Gyroscope",
                  "REKOGNITION_PROJECT": "aws-golang-api-dev",
                  "REKOGNITION_COLLECTION": "aws-golang-api-dev-collection",
                  "REKOGNITION_REGION": "us-east-1",
                  "V3_BUCKET": "aws-golang-api-dev-v3",
                  "ENV": "local"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GyroscopeLogGroup"
            ]
          },
          "GpsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z/gps.zip"
              },
              "Handler": ".bin/gps",
              "Runtime": "provided.al2",
              "FunctionName": "aws-golang-api-dev-gps",
              "MemorySize": 256,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LOG_LEVEL": "DEBUG",
                  "LOCATION_TABLE": "Location",
                  "GYROSCOPE_TABLE": "Gyroscope",
                  "REKOGNITION_PROJECT": "aws-golang-api-dev",
                  "REKOGNITION_COLLECTION": "aws-golang-api-dev-collection",
                  "REKOGNITION_REGION": "us-east-1",
                  "V3_BUCKET": "aws-golang-api-dev-v3",
                  "ENV": "local"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GpsLogGroup"
            ]
          },
          "PhotoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z/photo.zip"
              },
              "Handler": ".bin/photo",
              "Runtime": "provided.al2",
              "FunctionName": "aws-golang-api-dev-photo",
              "MemorySize": 256,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LOG_LEVEL": "DEBUG",
                  "LOCATION_TABLE": "Location",
                  "GYROSCOPE_TABLE": "Gyroscope",
                  "REKOGNITION_PROJECT": "aws-golang-api-dev",
                  "REKOGNITION_COLLECTION": "aws-golang-api-dev-collection",
                  "REKOGNITION_REGION": "us-east-1",
                  "V3_BUCKET": "aws-golang-api-dev-v3",
                  "ENV": "local"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PhotoLogGroup"
            ]
          },
          "LlmLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z/llm.zip"
              },
              "Handler": ".bin/llm",
              "Runtime": "provided.al2",
              "FunctionName": "aws-golang-api-dev-llm",
              "MemorySize": 256,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LOG_LEVEL": "DEBUG",
                  "LOCATION_TABLE": "Location",
                  "GYROSCOPE_TABLE": "Gyroscope",
                  "REKOGNITION_PROJECT": "aws-golang-api-dev",
                  "REKOGNITION_COLLECTION": "aws-golang-api-dev-collection",
                  "REKOGNITION_REGION": "us-east-1",
                  "V3_BUCKET": "aws-golang-api-dev-v3",
                  "ENV": "local"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LlmLogGroup"
            ]
          },
          "LlmCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "LlmLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "aws-golang-api-dev-llm",
              "BucketName": "aws-golang-api-dev-v3",
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:Put",
                  "Rules": [
                    {
                      "Prefix": "uploads/"
                    }
                  ]
                }
              ],
              "ForceDeploy": 1724677975662
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "aws-golang-api",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              "aws-golang-api-dev-v3"
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z/custom-resources.zip"
              },
              "FunctionName": "aws-golang-api-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs18.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-aws-golang-api",
              "BinaryMediaTypes": [
                "multipart/form-data"
              ],
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceTelemetry": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "telemetry",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTelemetryGyroscope": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTelemetry"
              },
              "PathPart": "gyroscope",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTelemetryGps": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTelemetry"
              },
              "PathPart": "gps",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTelemetryPhoto": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTelemetry"
              },
              "PathPart": "photo",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTelemetryGyroscopePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTelemetryGyroscope"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GyroscopeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GyroscopeLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTelemetryGpsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTelemetryGps"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GpsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GpsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTelemetryPhotoPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTelemetryPhoto"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PhotoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PhotoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1724677892122": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTelemetryGyroscopePost",
              "ApiGatewayMethodTelemetryGpsPost",
              "ApiGatewayMethodTelemetryPhotoPost"
            ]
          },
          "GyroscopeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GyroscopeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GpsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GpsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PhotoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PhotoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "V3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "aws-golang-api-dev-v3",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "aws-golang-api-dev-v3"
                }
              ]
            }
          },
          "V3BucketRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LambdaLoggingPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "S3UploadPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:ListBucket"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                          },
                          {
                            "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "V3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "V3Bucket"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": {
                        "Fn::GetAtt": [
                          "V3BucketRole",
                          "Arn"
                        ]
                      }
                    },
                    "Action": [
                      "s3:PutObject",
                      "s3:GetObject",
                      "s3:ListBucket"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                      },
                      {
                        "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                      }
                    ]
                  },
                  {
                    "Sid": "AWSRekognitionS3AclBucketRead20191011",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "rekognition.amazonaws.com"
                    },
                    "Action": [
                      "s3:GetBucketAcl",
                      "s3:GetBucketLocation"
                    ],
                    "Resource": {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                    }
                  },
                  {
                    "Sid": "AWSRekognitionS3GetBucket20191011",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "rekognition.amazonaws.com"
                    },
                    "Action": [
                      "s3:GetObject",
                      "s3:GetObjectAcl",
                      "s3:GetObjectVersion",
                      "s3:GetObjectTagging"
                    ],
                    "Resource": {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                    }
                  },
                  {
                    "Sid": "AWSRekognitionS3ACLBucketWrite20191011",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "rekognition.amazonaws.com"
                    },
                    "Action": "s3:GetBucketAcl",
                    "Resource": {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                    }
                  },
                  {
                    "Sid": "AWSRekognitionS3PutObject20191011",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "rekognition.amazonaws.com"
                    },
                    "Action": "s3:PutObject",
                    "Resource": {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                    },
                    "Condition": {
                      "StringEquals": {
                        "s3:x-amz-acl": "bucket-owner-full-control"
                      }
                    }
                  }
                ]
              }
            }
          },
          "GyroscopeTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Gyroscope",
              "AttributeDefinitions": [
                {
                  "AttributeName": "Timestamp",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "DeviceID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "DeviceID",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "Timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "TimeToLiveSpecification": {
                "AttributeName": "TTL",
                "Enabled": true
              },
              "SSESpecification": {
                "SSEEnabled": true
              }
            }
          },
          "LocationTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Location",
              "AttributeDefinitions": [
                {
                  "AttributeName": "DeviceID",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "Timestamp",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "DeviceID",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "Timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "SSESpecification": {
                "SSEEnabled": true
              }
            }
          },
          "RekognitionProject": {
            "Type": "AWS::Rekognition::Project",
            "Properties": {
              "ProjectName": "aws-golang-api-dev"
            }
          },
          "RekognitionCollection": {
            "Type": "AWS::Rekognition::Collection",
            "Properties": {
              "CollectionId": "aws-golang-api-dev-collection"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aws-golang-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-aws-golang-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "go": {
        "supportedRuntimes": [
          "provided.al2"
        ],
        "buildProvidedRuntimeAsBootstrap": true
      },
      "dotenv": {
        "required": {
          "env": [
            "ENV",
            "LOG_LEVEL",
            "LOCATION_TABLE",
            "GYROSCOPE_TABLE",
            "REKOGNITION_PROJECT",
            "REKOGNITION_REGION",
            "REKOGNITION_COLLECTION",
            "V3_BUCKET"
          ]
        }
      }
    },
    "plugins": [
      "serverless-offline",
      "serverless-go-plugin",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "gyroscope": {
        "handler": ".bin/gyroscope",
        "events": [
          {
            "http": {
              "path": "telemetry/gyroscope",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-golang-api-dev-gyroscope",
        "package": {
          "individually": true,
          "artifact": ".bin/gyroscope.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {}
      },
      "gps": {
        "handler": ".bin/gps",
        "events": [
          {
            "http": {
              "path": "telemetry/gps",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-golang-api-dev-gps",
        "package": {
          "individually": true,
          "artifact": ".bin/gps.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {}
      },
      "photo": {
        "handler": ".bin/photo",
        "events": [
          {
            "http": {
              "path": "telemetry/photo",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-golang-api-dev-photo",
        "package": {
          "individually": true,
          "artifact": ".bin/photo.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {}
      },
      "llm": {
        "handler": ".bin/llm",
        "events": [
          {
            "s3": {
              "bucket": "aws-golang-api-dev-v3",
              "event": "s3:ObjectCreated:Put",
              "existing": true,
              "forceDeploy": true,
              "rules": [
                {
                  "prefix": "uploads/"
                }
              ]
            }
          }
        ],
        "name": "aws-golang-api-dev-llm",
        "package": {
          "individually": true,
          "artifact": ".bin/llm.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "V3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "aws-golang-api-dev-v3",
            "Tags": [
              {
                "Key": "Name",
                "Value": "aws-golang-api-dev-v3"
              }
            ]
          }
        },
        "V3BucketRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "lambda.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "LambdaLoggingPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              },
              {
                "PolicyName": "S3UploadPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                        },
                        {
                          "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "V3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "V3Bucket"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": {
                      "Fn::GetAtt": [
                        "V3BucketRole",
                        "Arn"
                      ]
                    }
                  },
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                    },
                    {
                      "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                    }
                  ]
                },
                {
                  "Sid": "AWSRekognitionS3AclBucketRead20191011",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "rekognition.amazonaws.com"
                  },
                  "Action": [
                    "s3:GetBucketAcl",
                    "s3:GetBucketLocation"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                  }
                },
                {
                  "Sid": "AWSRekognitionS3GetBucket20191011",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "rekognition.amazonaws.com"
                  },
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:GetObjectVersion",
                    "s3:GetObjectTagging"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                  }
                },
                {
                  "Sid": "AWSRekognitionS3ACLBucketWrite20191011",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "rekognition.amazonaws.com"
                  },
                  "Action": "s3:GetBucketAcl",
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3"
                  }
                },
                {
                  "Sid": "AWSRekognitionS3PutObject20191011",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "rekognition.amazonaws.com"
                  },
                  "Action": "s3:PutObject",
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::aws-golang-api-dev-v3/*"
                  },
                  "Condition": {
                    "StringEquals": {
                      "s3:x-amz-acl": "bucket-owner-full-control"
                    }
                  }
                }
              ]
            }
          }
        },
        "GyroscopeTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Gyroscope",
            "AttributeDefinitions": [
              {
                "AttributeName": "Timestamp",
                "AttributeType": "N"
              },
              {
                "AttributeName": "DeviceID",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "DeviceID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "Timestamp",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            },
            "TimeToLiveSpecification": {
              "AttributeName": "TTL",
              "Enabled": true
            },
            "SSESpecification": {
              "SSEEnabled": true
            }
          }
        },
        "LocationTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Location",
            "AttributeDefinitions": [
              {
                "AttributeName": "DeviceID",
                "AttributeType": "S"
              },
              {
                "AttributeName": "Timestamp",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "DeviceID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "Timestamp",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            },
            "SSESpecification": {
              "SSEEnabled": true
            }
          }
        },
        "RekognitionProject": {
          "Type": "AWS::Rekognition::Project",
          "Properties": {
            "ProjectName": "aws-golang-api-dev"
          }
        },
        "RekognitionCollection": {
          "Type": "AWS::Rekognition::Collection",
          "Properties": {
            "CollectionId": "aws-golang-api-dev-collection"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "aws-golang-api",
      "frameworkVersion": "3",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!./**",
          "./.bin/**"
        ],
        "artifactsS3KeyDirname": "serverless/aws-golang-api/dev/code-artifacts",
        "artifactDirectoryName": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/aws-golang-api/dev/1724677975648-2024-08-26T13:12:55.648Z",
    "artifact": ""
  }
}